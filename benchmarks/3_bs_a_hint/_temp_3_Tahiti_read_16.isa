ShaderType = IL_SHADER_COMPUTE
TargetChip = t
; ------------- SC_SRCSHADER Dump ------------------
SC_SHADERSTATE: u32NumIntVSConst = 0
SC_SHADERSTATE: u32NumIntPSConst = 0
SC_SHADERSTATE: u32NumIntGSConst = 0
SC_SHADERSTATE: u32NumBoolVSConst = 0
SC_SHADERSTATE: u32NumBoolPSConst = 0
SC_SHADERSTATE: u32NumBoolGSConst = 0
SC_SHADERSTATE: u32NumFloatVSConst = 0
SC_SHADERSTATE: u32NumFloatPSConst = 0
SC_SHADERSTATE: u32NumFloatGSConst = 0
fConstantsAvailable = 0
iConstantsAvailable = 0
bConstantsAvailable = 0
u32SCOptions[0] = 0x01A00000 SCOption_IGNORE_SAMPLE_L_BUG SCOption_FLOAT_DO_NOT_DIST SCOption_FLOAT_DO_NOT_REASSOC
u32SCOptions[1] = 0x00000000
u32SCOptions[2] = 0x20800001 SCOption_R800_UAV_NONARRAY_FIXUP SCOption_R1000_BYTE_SHORT_WRITE_WORKAROUND_BUG317611 SCOption_R1000_READLANE_SMRD_WORKAROUND_BUG343479
u32SCOptions[3] = 0x00000010 SCOption_R1000_BARRIER_WORKAROUND_BUG405404
; -------- Disassembly --------------------
shader main
  asic(SI_ASIC)
  type(CS)

  s_buffer_load_dwordx2  s[0:1], s[4:7], 0x04               // 00000000: C2400504
  s_waitcnt     lgkmcnt(0)                                  // 00000004: BF8C007F
  s_min_u32     s0, s0, 0x0000ffff                          // 00000008: 8380FF00 0000FFFF
  s_min_u32     s1, s1, 0x0000ffff                          // 00000010: 8381FF01 0000FFFF
  v_mov_b32     v2, s0                                      // 00000018: 7E040200
  v_mul_i32_i24  v2, s12, v2                                // 0000001C: 1204040C
  v_mov_b32     v3, s1                                      // 00000020: 7E060201
  v_mul_i32_i24  v3, s13, v3                                // 00000024: 1206060D
  v_add_i32     v0, vcc, v0, v2                             // 00000028: 4A000500
  v_add_i32     v1, vcc, v1, v3                             // 0000002C: 4A020701
  s_buffer_load_dwordx2  s[0:1], s[4:7], 0x18               // 00000030: C2400518
  s_waitcnt     lgkmcnt(0)                                  // 00000034: BF8C007F
  v_add_i32     v0, vcc, s0, v0                             // 00000038: 4A000000
  v_add_i32     v1, vcc, s1, v1                             // 0000003C: 4A020201
  s_buffer_load_dword  s0, s[8:11], 0x00                    // 00000040: C2000900
  s_buffer_load_dword  s1, s[8:11], 0x04                    // 00000044: C2008904
  s_buffer_load_dword  s4, s[8:11], 0x08                    // 00000048: C2020908
  s_waitcnt     lgkmcnt(0)                                  // 0000004C: BF8C007F
  v_mul_lo_i32  v1, v1, s4                                  // 00000050: D2D60001 00000901
  v_lshlrev_b32  v0, 4, v0                                  // 00000058: 34000084
  v_add_i32     v0, vcc, v1, v0                             // 0000005C: 4A000101
  v_lshlrev_b32  v0, 2, v0                                  // 00000060: 34000082
  v_add_i32     v1, vcc, s0, v0                             // 00000064: 4A020000
  s_load_dwordx4  s[4:7], s[2:3], 0x50                      // 00000068: C0820350
  s_waitcnt     lgkmcnt(0)                                  // 0000006C: BF8C007F
  tbuffer_load_format_xyzw  v[2:5], v1, s[4:7], 0 offen offset:48 format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000070: EBF31030 80010201
  tbuffer_load_format_xyzw  v[6:9], v1, s[4:7], 0 offen offset:32 format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000078: EBF31020 80010601
  tbuffer_load_format_xyzw  v[10:13], v1, s[4:7], 0 offen offset:16 format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 00000080: EBF31010 80010A01
  v_add_i32     v0, vcc, s1, v0                             // 00000088: 4A000001
  tbuffer_load_format_xyzw  v[14:17], v1, s[4:7], 0 offen format:[BUF_DATA_FORMAT_32_32_32_32,BUF_NUM_FORMAT_FLOAT] // 0000008C: EBF31000 80010E01
  v_mov_b32     v1, 0x40400000                              // 00000094: 7E0202FF 40400000
  s_waitcnt     vmcnt(0)                                    // 0000009C: BF8C1F70
  v_add_f32     v14, v1, v14                                // 000000A0: 061C1D01
  v_add_f32     v15, v15, v1                                // 000000A4: 061E030F
  v_add_f32     v16, v16, v1                                // 000000A8: 06200310
  v_add_f32     v17, v17, v1                                // 000000AC: 06220311
  s_load_dwordx4  s[0:3], s[2:3], 0x58                      // 000000B0: C0800358
  s_waitcnt     lgkmcnt(0)                                  // 000000B4: BF8C007F
  tbuffer_store_format_x  v14, v0, s[0:3], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000000B8: EBA41000 80000E00
  tbuffer_store_format_x  v15, v0, s[0:3], 0 offen offset:4 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000000C0: EBA41004 80000F00
  tbuffer_store_format_x  v16, v0, s[0:3], 0 offen offset:8 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000000C8: EBA41008 80001000
  tbuffer_store_format_x  v17, v0, s[0:3], 0 offen offset:12 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000000D0: EBA4100C 80001100
  v_add_f32     v10, v10, v1                                // 000000D8: 0614030A
  v_add_f32     v11, v11, v1                                // 000000DC: 0616030B
  v_add_f32     v12, v12, v1                                // 000000E0: 0618030C
  v_add_f32     v13, v13, v1                                // 000000E4: 061A030D
  tbuffer_store_format_x  v10, v0, s[0:3], 0 offen offset:16 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000000E8: EBA41010 80000A00
  tbuffer_store_format_x  v11, v0, s[0:3], 0 offen offset:20 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000000F0: EBA41014 80000B00
  tbuffer_store_format_x  v12, v0, s[0:3], 0 offen offset:24 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 000000F8: EBA41018 80000C00
  tbuffer_store_format_x  v13, v0, s[0:3], 0 offen offset:28 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000100: EBA4101C 80000D00
  v_add_f32     v6, v6, v1                                  // 00000108: 060C0306
  v_add_f32     v7, v7, v1                                  // 0000010C: 060E0307
  v_add_f32     v8, v8, v1                                  // 00000110: 06100308
  v_add_f32     v9, v9, v1                                  // 00000114: 06120309
  tbuffer_store_format_x  v6, v0, s[0:3], 0 offen offset:32 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000118: EBA41020 80000600
  tbuffer_store_format_x  v7, v0, s[0:3], 0 offen offset:36 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000120: EBA41024 80000700
  tbuffer_store_format_x  v8, v0, s[0:3], 0 offen offset:40 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000128: EBA41028 80000800
  tbuffer_store_format_x  v9, v0, s[0:3], 0 offen offset:44 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000130: EBA4102C 80000900
  v_add_f32     v2, v2, v1                                  // 00000138: 06040302
  v_add_f32     v3, v3, v1                                  // 0000013C: 06060303
  v_add_f32     v4, v4, v1                                  // 00000140: 06080304
  v_add_f32     v1, v5, v1                                  // 00000144: 06020305
  tbuffer_store_format_x  v2, v0, s[0:3], 0 offen offset:48 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000148: EBA41030 80000200
  tbuffer_store_format_x  v3, v0, s[0:3], 0 offen offset:52 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000150: EBA41034 80000300
  tbuffer_store_format_x  v4, v0, s[0:3], 0 offen offset:56 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000158: EBA41038 80000400
  tbuffer_store_format_x  v1, v0, s[0:3], 0 offen offset:60 format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT] // 00000160: EBA4103C 80000100
  s_endpgm                                                  // 00000168: BF810000
end

; ----------------- CS Data ------------------------

codeLenInByte        = 364;Bytes

userElementCount     = 3;
;  userElements[0]      = PTR_UAV_TABLE, 0, s[2:3]
;  userElements[1]      = IMM_CONST_BUFFER, 0, s[4:7]
;  userElements[2]      = IMM_CONST_BUFFER, 1, s[8:11]
extUserElementCount  = 0;
NumVgprs             = 18;
NumSgprs             = 15;
FloatMode            = 192;
IeeeMode             = 0;
ScratchSize          = 0;
; texResourceUsage[0]     = 0x00000000
; texResourceUsage[1]     = 0x00000000
; texResourceUsage[2]     = 0x00000000
; texResourceUsage[3]     = 0x00000000
; texResourceUsage[4]     = 0x00000000
; texResourceUsage[5]     = 0x00000000
; texResourceUsage[6]     = 0x00000000
; texResourceUsage[7]     = 0x00000000
; fetch4ResourceUsage[0]  = 0x00000000
; fetch4ResourceUsage[1]  = 0x00000000
; fetch4ResourceUsage[2]  = 0x00000000
; fetch4ResourceUsage[3]  = 0x00000000
; fetch4ResourceUsage[4]  = 0x00000000
; fetch4ResourceUsage[5]  = 0x00000000
; fetch4ResourceUsage[6]  = 0x00000000
; fetch4ResourceUsage[7]  = 0x00000000
; texSamplerUsage         = 0x00000000
; constBufUsage           = 0x00000003

;COMPUTE_PGM_RSRC2       = 0x00000998
COMPUTE_PGM_RSRC2:USER_SGPR      = 12
COMPUTE_PGM_RSRC2:TGID_X_EN      = 1
COMPUTE_PGM_RSRC2:TGID_Y_EN      = 1
COMPUTE_PGM_RSRC2:TIDIG_COMP_CNT = 1
